---
apiVersion: v1
kind: Service
metadata:
  namespace: medsci
  name: redis-cluster-unpersistence
spec:
  clusterIP: None
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  selector:
    app: redis-cluster-unpersistence
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: medsci
  name: redis-cluster-unpersistence
spec:
  serviceName: redis-cluster-unpersistence
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster-unpersistence
  template:
    metadata:
      labels:
        app: redis-cluster-unpersistence
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command: ["/etc/redis/fix-ip.sh", "redis-server", "/etc/redis/redis.conf"]
        env:
        - name: TZ
          value: Asia/Shanghai
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /etc/redis/
          readOnly: false
        #- name: data
          #mountPath: /opt/redis/db
          #readOnly: false
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-unpersistence
          defaultMode: 0755
  #volumeClaimTemplates:
  #- metadata:
      #name: data
      #annotations:
        #volume.beta.kubernetes.io/storage-class: "redis-nfs-storage"
    #spec:
      #accessModes:
        #- ReadWriteMany
      #resources:
        #requests:
          #storage: 10Gi
